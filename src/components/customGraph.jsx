import React from "react";
function reduceAccuracy(rawData, decimalPlaces = 2) {
  return rawData.replace(/\d+\.\d+/g, (match) => {
    return Number(match).toFixed(decimalPlaces);
  });
}
const rawData =
  "M0,14.416666666666666L1.3333333333333333,11.503333333333194L2.6666666666666665,14.071666666666458L4,8.628333333333194L5.333333333333333,11.541666666666666L6.666666666666667,10.123333333333054L8,10.42999999999979L9.333333333333334,9.16499999999972L10.666666666666666,9.433333333333334L12,8.896666666666457L13.333333333333334,8.743333333333263L14.666666666666666,4.79499999999986L16,1.4216666666664572L17.333333333333332,1.9583333333333321L18.666666666666668,5.561666666666529L20,8.014999999999722L21.333333333333332,8.398333333333055L22.666666666666668,9.241666666666667L24,13.228333333333193L25.333333333333332,15.71999999999986L26.666666666666668,14.8L28,16.06499999999972L29.333333333333332,18.748333333333054L30.666666666666668,18.01999999999986L32,23.041666666666668L33.333333333333336,23.27166666666646L34.666666666666664,24L36,19.59166666666667L37.333333333333336,17.828333333333195L38.666666666666664,18.786666666666527L40,21.853333333333193L41.333333333333336,19.898333333333056L42.666666666666664,19.936666666666525L44,19.706666666666386L45.333333333333336,16.141666666666666L46.666666666666664,11.426666666666597L48,9.394999999999861L49.333333333333336,9.356666666666388L50.666666666666664,9.203333333333195L52,10.889999999999722L53.333333333333336,10.621666666666458L54.666666666666664,9.356666666666388L56,10.928333333333194L57.333333333333336,10.698333333333055L58.666666666666664,11.23499999999993L60,10.928333333333194L61.333333333333336,10.42999999999979L62.666666666666664,12.5L64,15.451666666666597L65.33333333333333,18.211666666666527L66.66666666666667,17.52166666666646L68,17.675L69.33333333333333,20.89499999999986L70.66666666666667,20.39666666666646L72,14.263333333333124L73.33333333333333,14.301666666666597L74.66666666666667,13.99499999999986L76,12.921666666666457L77.33333333333333,13.496666666666458L78.66666666666667,14.761666666666526L80,11.196666666666458L81.33333333333333,9.356666666666388L82.66666666666667,9.394999999999861L84,9.433333333333334L85.33333333333333,9.394999999999861L86.66666666666667,9.586666666666527L88,12.5L89.33333333333333,12.806666666666388L90.66666666666667,18.211666666666527L92,12.653333333333194L93.33333333333333,8.091666666666667L94.66666666666667,4.21999999999986L96,3.8366666666665274L97.33333333333333,7.401666666666596L98.66666666666667,9.394999999999861L98.66666666666667,9.394999999999861L97.33333333333333,7.401666666666596L96,3.8366666666665274L94.66666666666667,4.21999999999986L93.33333333333333,8.091666666666667L92,12.653333333333194L90.66666666666667,18.211666666666527L89.33333333333333,12.806666666666388L88,12.5L86.66666666666667,9.586666666666527L85.33333333333333,9.394999999999861L84,9.433333333333334L82.66666666666667,9.394999999999861L81.33333333333333,9.356666666666388L80,11.196666666666458L78.66666666666667,14.761666666666526L77.33333333333333,13.496666666666458L76,12.921666666666457L74.66666666666667,13.99499999999986L73.33333333333333,14.301666666666597L72,14.263333333333124L70.66666666666667,20.39666666666646L69.33333333333333,20.89499999999986L68,17.675L66.66666666666667,17.52166666666646L65.33333333333333,18.211666666666527L64,15.451666666666597L62.666666666666664,12.5L61.333333333333336,10.42999999999979L60,10.928333333333194L58.666666666666664,11.23499999999993L57.333333333333336,10.698333333333055L56,10.928333333333194L54.666666666666664,9.356666666666388L53.333333333333336,10.621666666666458L52,10.889999999999722L50.666666666666664,9.203333333333195L49.333333333333336,9.356666666666388L48,9.394999999999861L46.666666666666664,11.426666666666597L45.333333333333336,16.141666666666666L44,19.706666666666386L42.666666666666664,19.936666666666525L41.333333333333336,19.898333333333056L40,21.853333333333193L38.666666666666664,18.786666666666527L37.333333333333336,17.828333333333195L36,19.59166666666667L34.666666666666664,24L33.333333333333336,23.27166666666646L32,23.041666666666668L30.666666666666668,18.01999999999986L29.333333333333332,18.748333333333054L28,16.06499999999972L26.666666666666668,14.8L25.333333333333332,15.71999999999986L24,13.228333333333193L22.666666666666668,9.241666666666667L21.333333333333332,8.398333333333055L20,8.014999999999722L18.666666666666668,5.561666666666529L17.333333333333332,1.9583333333333321L16,1.4216666666664572L14.666666666666666,4.79499999999986L13.333333333333334,8.743333333333263L12,8.896666666666457L10.666666666666666,9.433333333333334L9.333333333333334,9.16499999999972L8,10.42999999999979L6.666666666666667,10.123333333333054L5.333333333333333,11.541666666666666L4,8.628333333333194L2.6666666666666665,14.071666666666458L1.3333333333333333,11.503333333333194L0,14.416666666666666Z";
const reducedAccuracyData = reduceAccuracy(rawData, 2);
const CustomGraph = ({ width = 100, height = 25, color = "green" }) => {
  return (
    <svg width={width} height={height}>
      <g>
        <path
          d={rawData}
          stroke="green"
          strokeOpacity="1"
          shapeRendering="geometricPrecision"
          strokeWidth="1.8"
          fill="none"
        />
        <line
          x1="0"
          y1="12.5"
          x2="100"
          y2="12.5"
          stroke="black"
          strokeOpacity="0.3"
          strokeWidth="1"
          style={{ strokeDasharray: "3, 3" }}
        />
      </g>
    </svg>
  );
};

export default CustomGraph;
